# harbor-values.yaml - Ingress-NGINX with network restrictions
expose:
  type: ingress
  ingress:
    hosts:
      core: harbor.batk.me
    className: "nginx"  # Use your ingress-nginx class
    annotations:
      # Use cert-manager for Let's Encrypt certificates
      cert-manager.io/cluster-issuer: "letsencrypt-prod"

      # NGINX Ingress specific settings for Harbor
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "900"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "900"

      # Forward real IP to Harbor
      nginx.ingress.kubernetes.io/use-forwarded-headers: "true"

      # RESTRICT TO LOCAL NETWORK ONLY
      nginx.ingress.kubernetes.io/whitelist-source-range: "172.16.0.0/12"

    # TLS configuration with cert-manager
    tls:
      enabled: true
      # Use cert-manager generated certificate
      certSource: secret
      secretName: harbor-tls

# External URL should match how you'll access it
externalURL: https://harbor.batk.me

# Persistence using Longhorn
persistence:
  enabled: true
  resourcePolicy: "keep"
  persistentVolumeClaim:
    registry:
      storageClass: "longhorn"
      size: 50Gi
    chartmuseum:
      storageClass: "longhorn"
      size: 5Gi
    jobservice:
      storageClass: "longhorn"
      size: 5Gi
    database:
      storageClass: "longhorn"
      size: 5Gi
    redis:
      storageClass: "longhorn"
      size: 5Gi
    trivy:
      storageClass: "longhorn"
      size: 5Gi

# Use existing secret for Harbor admin password
existingSecretAdminPassword: "harbor-admin-secret"
existingSecretAdminPasswordKey: "password"

# Core configuration
core:
  replicas: 1
  existingSecret: "harbor-core-secret"
  existingSecretKey: "secret"

# JobService configuration
jobservice:
  replicas: 1
  existingSecret: "harbor-jobservice-secret"
  existingSecretKey: "secret"

# Registry configuration
registry:
  replicas: 1
  existingSecret: "harbor-registry-secret"
  existingSecretKey: "secret"

# ChartMuseum (Helm chart repository)
chartmuseum:
  enabled: true

# Trivy (vulnerability scanner)
trivy:
  enabled: true

# Notary (content trust)
notary:
  enabled: false

# Database (PostgreSQL) - Use existing secret
database:
  type: internal
  internal:
    existingSecret: "harbor-database-secret"
    existingSecretPasswordKey: "password"

# Redis - Use existing secret
redis:
  type: internal
  existingSecret: "harbor-redis-secret"
  existingSecretPasswordKey: "password"

# Metrics
metrics:
  enabled: true

# TLS Configuration
internalTLS:
  enabled: false
